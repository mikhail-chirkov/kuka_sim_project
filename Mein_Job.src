DEF  Mein_Job ( )

;FOLD INI
CONTINUE
IF NOT $ON_PATH THEN
  ;FOLD BASISTECH INI
    GLOBAL INTERRUPT DECL 3 WHEN $STOPMESS==TRUE DO IR_STOPM ( )
    INTERRUPT ON 3 
    BAS (#INITMOV,0 )
  ;ENDFOLD (BASISTECH INI)
  ;FOLD USER INI
    ;Make your modifications here

  ;ENDFOLD (USER INI)
ENDIF
;ENDFOLD (INI)

;FOLD SET JOBINFO HTML FILENAME
;  APP_sHTML_JOBINFO[] = "Mein_Projekt\Mein_Job.htm"
;ENDFOLD

;FOLD CHECK DAT-FILE GENERATION NUMBER
  IF APP_GENNUMBER <> -336453 THEN
    LOOP
      MsgQuit("InconsistenceSRCandDAT",,,,1)
      HALT
    ENDLOOP
  ENDIF
;ENDFOLD


;fold Jobinfo
;Job information: Mein_Job
;Product : 3.0.0.104
;Date: 2020-01-06-17_02
;Project name: Mein_Projekt
;Author: Mein Autor
;Company: Meine Firma
;Division: Meine Abteilung
;Comment: Mein Kommentar
;endfold

;fold Cellmap
; Conveyor #5
; Batch_Conveyor #7
; Sensor
; Batch_Conveyor #6
; Batch_Conveyor #5
; Machining area_Sensor 3
; Crossing #8
; Conveyor #24
; Block #16
; Block #14
; Block #13
; Block #12
; Block #11
; Block #10
; Block #8
; Block #7
; Conveyor #10
; Block #2
; Machining Robot 2
; Gripper #7
; Cylinder #5
; Cylinder #4
; Conveyor #27
; Crossing #7
; Crossing #6
; Conveyor #28
; Conveyor #29
; Crossing #24
; Conveyor #30
; Conveyor #26
; Crossing #11
; Conveyor #23
; Crossing #20
; Crossing #13
; Conveyor #19
; Crossing #21
; Crossing #23
; Conveyor #20
; Crossing #4
; Conveyor #14
; Conveyor #21
; Conveyor #22
; Conveyor #17
; Conveyor #18
; Crossing #3
; Conveyor #16
; Conveyor #13
; Conveyor #25
; Conveyor #15
; Crossing #19
; Crossing #18
; Crossing #15
; Cylinder #3
; Cylinder
; Cylinder #2
; Batch_Conveyor #2
; Product_Input_Sensor
; NewComponent
; Conveyor #11
; Conveyor #6
; NewComponent #2
; Conveyor #4
; Creator
; NewComponent #3
; NewComponent #4
; NewComponent #5
; Batch_Conveyor
; Product_Output_Sensor
; Welding Robot 
; Fronius_Torch_HW_MTB_330i_G_22
; Machining Robot 1
; Gripper #5
; NewComponent #6
; Block
; Block #3
; Batch_Conveyor #4
; Machining area_Sensor 1
; Pick & Place
; Gripper #6
; Inspection Robot
; Gripper #8
; Camera_Cognex
;endfold
;fold Axes definitions
; Axis1 [-170 170] Rot [deg] (Machining Robot 1 : A1)
; Axis2 [-190 45] Rot [deg] (Machining Robot 1 : A2)
; Axis3 [-120 156] Rot [deg] (Machining Robot 1 : A3)
; Axis4 [-185 185] Rot [deg] (Machining Robot 1 : A4)
; Axis5 [-120 120] Rot [deg] (Machining Robot 1 : A5)
; Axis6 [-350 350] Rot [deg] (Machining Robot 1 : A6)
;endfold
;fold RobRoot, Tools and Bases used
; $ROBROOT = {x 0,y 0,z 0,a 0,b 0,c 0}
; BASE_DATA[1] = {x 0,y 0,z 0,a 0,b 0,c 0}
; TOOL_DATA[1] = {x 0,y 0,z 100,a 0,b 0,c 0}
;endfold
;fold HomePositions
XHOME={A1 0,A2 -90,A3 90,A4 0,A5 0,A6 0,E1 0,E2 0,E3 0,E4 0,E5 0,E6 0}
$H_POS=XHOME
;endfold
;FOLD PTP HOME  Vel= 100 % DEFAULT;%{PE}%R 8.3.31,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:HOME, 3:, 5:100, 7:DEFAULT
$BWDSTART = FALSE
PDAT_ACT=PDEFAULT
FDAT_ACT=FDEFAULT
BAS (#PTP_PARAMS,100)
$H_POS=XHOME
PTP  XHOME 
;ENDFOLD
NextPos = 0
Count = 0
While True
WAIT FOR $IN[104]==TRUE
;FOLD ; If Count < 10, storage is not full and inflated for the first time;%{PE}%R 5.4.27,%MKUKATPBASIS,%CCOMMENT,%VNORMAL,%P 2: If Count < 10, storage is not full and inflated for the first time
;ENDFOLD
;FOLD ; Else storage is full and robot frees the space for detail before place it;%{PE}%R 5.4.27,%MKUKATPBASIS,%CCOMMENT,%VNORMAL,%P 2: Else storage is full and robot frees the space for detail before place it
;ENDFOLD
if Count < 10 then
TakeFromBelt()
if Count < 3 then
if Count == 0 then
BASE_DATA[1]={X 0.0000 ,Y 0.0000 ,Z 0.0000 ,A 0.0000 ,B 0.0000 ,C 0.0000}
BASE_TYPE[1]=#NONE
PlaceLevelOne()
Count = Count+1
else
BASE_DATA[1]=BASE_DATA[1]:{X 105.0000 ,Y 0.0000 ,Z 0.0000 ,A 0.0000 ,B 0.0000 ,C 0.0000}
BASE_TYPE[1]=#NONE
PlaceLevelOne()
Count = Count+1
endif
else
if Count < 6 then
if Count == 3 then
BASE_DATA[1]={X -50.0000 ,Y 110.0000 ,Z 0.0000 ,A 0.0000 ,B 0.0000 ,C 0.0000}
BASE_TYPE[1]=#NONE
PlaceLevelOne()
Count = Count+1
else
BASE_DATA[1]=BASE_DATA[1]:{X 105.0000 ,Y 0.0000 ,Z 0.0000 ,A 0.0000 ,B 0.0000 ,C 0.0000}
BASE_TYPE[1]=#NONE
PlaceLevelOne()
Count = Count+1
endif
else
if Count < 8 then
if Count == 6 then
BASE_DATA[1]={X 105.0000 ,Y 0.0000 ,Z 0.0000 ,A 0.0000 ,B 0.0000 ,C 0.0000}
BASE_TYPE[1]=#NONE
PlaceLevelTwo()
Count = Count+1
else
BASE_DATA[1]=BASE_DATA[1]:{X 105.0000 ,Y 0.0000 ,Z 0.0000 ,A 0.0000 ,B 0.0000 ,C 0.0000}
BASE_TYPE[1]=#NONE
PlaceLevelTwo()
Count = Count+1
endif
else
if Count == 8 then
BASE_DATA[1]={X 55.0000 ,Y 110.0000 ,Z 0.0000 ,A 0.0000 ,B 0.0000 ,C 0.0000}
BASE_TYPE[1]=#NONE
PlaceLevelTwo()
Count = Count+1
else
BASE_DATA[1]=BASE_DATA[1]:{X 105.0000 ,Y 0.0000 ,Z 0.0000 ,A 0.0000 ,B 0.0000 ,C 0.0000}
BASE_TYPE[1]=#NONE
PlaceLevelTwo()
Count = Count+1
endif
endif
endif
endif
else
if NextPos == 0 then
BASE_DATA[1]={X 0.0000 ,Y 0.0000 ,Z 0.0000 ,A 0.0000 ,B 0.0000 ,C 0.0000}
BASE_TYPE[1]=#NONE
TakeLevelOne()
PlaceOnBelt()
TakeFromBelt()
PlaceLevelOne()
NextPos = NextPos + 1
else
if NextPos < 3 then
BASE_DATA[1]=BASE_DATA[1]:{X 105.0000 ,Y 0.0000 ,Z 0.0000 ,A 0.0000 ,B 0.0000 ,C 0.0000}
BASE_TYPE[1]=#NONE
PrepareLevelTwo()
TakeLevelOne()
PlaceOnBelt()
TakeFromBelt()
PlaceLevelOne()
NextPos = NextPos + 1
else
if NextPos == 3 then
ClearLevelTwo()
BASE_DATA[1]=BASE_DATA[1]:{X -105.0000 ,Y 0.0000 ,Z 0.0000 ,A 0.0000 ,B 0.0000 ,C 0.0000}
BASE_TYPE[1]=#NONE
ClearLevelTwo()
BASE_DATA[1]={X -50.0000 ,Y 110.0000 ,Z 0.0000 ,A 0.0000 ,B 0.0000 ,C 0.0000}
BASE_TYPE[1]=#NONE
TakeLevelOne()
PlaceOnBelt()
TakeFromBelt()
PlaceLevelOne()
NextPos = NextPos + 1
else
if NextPos < 6 then
BASE_DATA[1]=BASE_DATA[1]:{X 105.0000 ,Y 0.0000 ,Z 0.0000 ,A 0.0000 ,B 0.0000 ,C 0.0000}
BASE_TYPE[1]=#NONE
PrepareLevelTwo()
TakeLevelOne()
PlaceOnBelt()
TakeFromBelt()
PlaceLevelOne()
NextPos = NextPos + 1
else
if NextPos == 6 then
ClearLevelTwo()
BASE_DATA[1]=BASE_DATA[1]:{X -105.0000 ,Y 0.0000 ,Z 0.0000 ,A 0.0000 ,B 0.0000 ,C 0.0000}
BASE_TYPE[1]=#NONE
ClearLevelTwo()
BASE_DATA[1]={X 105.0000 ,Y 0.0000 ,Z 0.0000 ,A 0.0000 ,B 0.0000 ,C 0.0000}
BASE_TYPE[1]=#NONE
TakeLevelTwo()
PlaceOnBelt()
TakeFromBelt()
PlaceLevelTwo()
NextPos = NextPos + 1
else
if NextPos < 8 then
BASE_DATA[1]=BASE_DATA[1]:{X 105.0000 ,Y 0.0000 ,Z 0.0000 ,A 0.0000 ,B 0.0000 ,C 0.0000}
BASE_TYPE[1]=#NONE
TakeLevelTwo()
PlaceOnBelt()
TakeFromBelt()
PlaceLevelTwo()
NextPos = NextPos + 1
else
if NextPos == 8 then
BASE_DATA[1]={X 55.0000 ,Y 110.0000 ,Z 0.0000 ,A 0.0000 ,B 0.0000 ,C 0.0000}
BASE_TYPE[1]=#NONE
TakeLevelTwo()
PlaceOnBelt()
TakeFromBelt()
PlaceLevelTwo()
NextPos = NextPos + 1
else
BASE_DATA[1]=BASE_DATA[1]:{X 105.0000 ,Y 0.0000 ,Z 0.0000 ,A 0.0000 ,B 0.0000 ,C 0.0000}
BASE_TYPE[1]=#NONE
TakeLevelTwo()
PlaceOnBelt()
TakeFromBelt()
PlaceLevelTwo()
NextPos = 0
endif
endif
endif
endif
endif
endif
endif
endif
endwhile
END


DEF TakeFromBelt()

;FOLD ; Take the next detail and prepare to place it by PlaceLevelOne or PlaceLevelTwo;%{PE}%R 5.4.27,%MKUKATPBASIS,%CCOMMENT,%VNORMAL,%P 2: Take the next detail and prepare to place it by PlaceLevelOne or PlaceLevelTwo
;ENDFOLD
;FOLD PTP P1 CONT Vel= 100 % PDATP1 Tool[1] Base[0] ;%{PE}%R 8.3.31,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:P1, 3:C_DIS, 5:100, 7:PDATP1
$BWDSTART = FALSE
PDAT_ACT=PPDATP1
FDAT_ACT=FP1
BAS (#PTP_PARAMS,100)
PTP  XP1 C_DIS
;ENDFOLD
;FOLD LIN P2 CONT Vel= 2 m/s CPDATP1 Tool[1] Base[0] ;%{PE}%R 8.3.31,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:P2, 3:C_DIS, 5:2, 7:CPDATP1
$BWDSTART = FALSE
LDAT_ACT=LCPDATP1
FDAT_ACT=FP2
BAS (#CP_PARAMS,2)
LIN  XP2 C_DIS
;ENDFOLD
;FOLD WAIT Time=0.5 sec;%{PE}%R 8.3.40,%MKUKATPBASIS,%CWAIT,%VWAIT,%P 3:0.5
WAIT SEC 0.5
;ENDFOLD
;FOLD OUT 1 ''  State= TRUE ;%{PE}%R 5.4.27,%MKUKATPBASIS,%COUT,%VOUTX,%P 2:1, 3:, 5:TRUE, 6:

$OUT[1]=TRUE
;ENDFOLD
;FOLD LIN P6 CONT Vel= 2 m/s CPDATP4 Tool[1] Base[0] ;%{PE}%R 8.3.31,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:P6, 3:C_DIS, 5:2, 7:CPDATP4
$BWDSTART = FALSE
LDAT_ACT=LCPDATP4
FDAT_ACT=FP6
BAS (#CP_PARAMS,2)
LIN  XP6 C_DIS
;ENDFOLD
END


DEF PlaceOnBelt()

;FOLD ; Place the detail taken by TakeLevelOne or TakeLevelTwo on the belt;%{PE}%R 5.4.27,%MKUKATPBASIS,%CCOMMENT,%VNORMAL,%P 2: Place the detail taken by TakeLevelOne or TakeLevelTwo on the belt
;ENDFOLD
;FOLD LIN P23 CONT Vel= 2 m/s CPDATP4 Tool[1] Base[0] ;%{PE}%R 8.3.31,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:P23, 3:C_DIS, 5:2, 7:CPDATP4
$BWDSTART = FALSE
LDAT_ACT=LCPDATP4
FDAT_ACT=FP23
BAS (#CP_PARAMS,2)
LIN  XP23 C_DIS
;ENDFOLD
;FOLD LIN P3 CONT Vel= 2 m/s CPDATP5 Tool[1] Base[0] ;%{PE}%R 8.3.31,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:P3, 3:C_DIS, 5:2, 7:CPDATP5
$BWDSTART = FALSE
LDAT_ACT=LCPDATP5
FDAT_ACT=FP3
BAS (#CP_PARAMS,2)
LIN  XP3 C_DIS
;ENDFOLD
;FOLD LIN P38 CONT Vel= 2 m/s CPDATP10 Tool[1] Base[0] ;%{PE}%R 8.3.31,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:P38, 3:C_DIS, 5:2, 7:CPDATP10
$BWDSTART = FALSE
LDAT_ACT=LCPDATP10
FDAT_ACT=FP38
BAS (#CP_PARAMS,2)
LIN  XP38 C_DIS
;ENDFOLD
;FOLD LIN P24 CONT Vel= 0.35 m/s CPDATP5 Tool[1] Base[0] ;%{PE}%R 8.3.31,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:P24, 3:C_DIS, 5:0.35, 7:CPDATP5
$BWDSTART = FALSE
LDAT_ACT=LCPDATP5
FDAT_ACT=FP24
BAS (#CP_PARAMS,0.35)
LIN  XP24 C_DIS
;ENDFOLD
;FOLD OUT 1 ''  State= FALSE ;%{PE}%R 5.4.27,%MKUKATPBASIS,%COUT,%VOUTX,%P 2:1, 3:, 5:FALSE, 6:

$OUT[1]=FALSE
;ENDFOLD
;FOLD LIN P25 CONT Vel= 0.25 m/s CPDATP6 Tool[1] Base[0] ;%{PE}%R 8.3.31,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:P25, 3:C_DIS, 5:0.25, 7:CPDATP6
$BWDSTART = FALSE
LDAT_ACT=LCPDATP6
FDAT_ACT=FP25
BAS (#CP_PARAMS,0.25)
LIN  XP25 C_DIS
;ENDFOLD
;FOLD LIN P39 CONT Vel= 0.35 m/s CPDATP11 Tool[1] Base[0] ;%{PE}%R 8.3.31,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:P39, 3:C_DIS, 5:0.35, 7:CPDATP11
$BWDSTART = FALSE
LDAT_ACT=LCPDATP11
FDAT_ACT=FP39
BAS (#CP_PARAMS,0.35)
LIN  XP39 C_DIS
;ENDFOLD
;FOLD LIN P40 CONT Vel= 2 m/s CPDATP12 Tool[1] Base[0] ;%{PE}%R 8.3.31,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:P40, 3:C_DIS, 5:2, 7:CPDATP12
$BWDSTART = FALSE
LDAT_ACT=LCPDATP12
FDAT_ACT=FP40
BAS (#CP_PARAMS,2)
LIN  XP40 C_DIS
;ENDFOLD
;FOLD LIN P37 CONT Vel= 2 m/s CPDATP4 Tool[1] Base[0] ;%{PE}%R 8.3.31,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:P37, 3:C_DIS, 5:2, 7:CPDATP4
$BWDSTART = FALSE
LDAT_ACT=LCPDATP4
FDAT_ACT=FP37
BAS (#CP_PARAMS,2)
LIN  XP37 C_DIS
;ENDFOLD
END


DEF PlaceLevelOne()

;FOLD ; Place the detail on the first level of storage;%{PE}%R 5.4.27,%MKUKATPBASIS,%CCOMMENT,%VNORMAL,%P 2: Place the detail on the first level of storage
;ENDFOLD
;FOLD LIN P4 CONT Vel= 2 m/s CPDATP2 Tool[1] Base[1] ;%{PE}%R 8.3.31,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:P4, 3:C_DIS, 5:2, 7:CPDATP2
$BWDSTART = FALSE
LDAT_ACT=LCPDATP2
FDAT_ACT=FP4
BAS (#CP_PARAMS,2)
LIN  XP4 C_DIS
;ENDFOLD
;FOLD LIN P5 CONT Vel= 2 m/s CPDATP3 Tool[1] Base[1] ;%{PE}%R 8.3.31,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:P5, 3:C_DIS, 5:2, 7:CPDATP3
$BWDSTART = FALSE
LDAT_ACT=LCPDATP3
FDAT_ACT=FP5
BAS (#CP_PARAMS,2)
LIN  XP5 C_DIS
;ENDFOLD
;FOLD OUT 1 ''  State= FALSE ;%{PE}%R 5.4.27,%MKUKATPBASIS,%COUT,%VOUTX,%P 2:1, 3:, 5:FALSE, 6:

$OUT[1]=FALSE
;ENDFOLD
;FOLD LIN P7 CONT Vel= 2 m/s CPDATP2 Tool[1] Base[1] ;%{PE}%R 8.3.31,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:P7, 3:C_DIS, 5:2, 7:CPDATP2
$BWDSTART = FALSE
LDAT_ACT=LCPDATP2
FDAT_ACT=FP7
BAS (#CP_PARAMS,2)
LIN  XP7 C_DIS
;ENDFOLD
;FOLD LIN P8 CONT Vel= 2 m/s CPDATP4 Tool[1] Base[0] ;%{PE}%R 8.3.31,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:P8, 3:C_DIS, 5:2, 7:CPDATP4
$BWDSTART = FALSE
LDAT_ACT=LCPDATP4
FDAT_ACT=FP8
BAS (#CP_PARAMS,2)
LIN  XP8 C_DIS
;ENDFOLD
END


DEF PlaceLevelTwo()

;FOLD ; Place the detail on the second level of storage;%{PE}%R 5.4.27,%MKUKATPBASIS,%CCOMMENT,%VNORMAL,%P 2: Place the detail on the second level of storage
;ENDFOLD
;FOLD LIN P10 CONT Vel= 2 m/s CPDATP2 Tool[1] Base[1] ;%{PE}%R 8.3.31,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:P10, 3:C_DIS, 5:2, 7:CPDATP2
$BWDSTART = FALSE
LDAT_ACT=LCPDATP2
FDAT_ACT=FP10
BAS (#CP_PARAMS,2)
LIN  XP10 C_DIS
;ENDFOLD
;FOLD LIN P11 CONT Vel= 2 m/s CPDATP3 Tool[1] Base[1] ;%{PE}%R 8.3.31,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:P11, 3:C_DIS, 5:2, 7:CPDATP3
$BWDSTART = FALSE
LDAT_ACT=LCPDATP3
FDAT_ACT=FP11
BAS (#CP_PARAMS,2)
LIN  XP11 C_DIS
;ENDFOLD
;FOLD OUT 1 ''  State= FALSE ;%{PE}%R 5.4.27,%MKUKATPBASIS,%COUT,%VOUTX,%P 2:1, 3:, 5:FALSE, 6:

$OUT[1]=FALSE
;ENDFOLD
;FOLD LIN P12 CONT Vel= 2 m/s CPDATP2 Tool[1] Base[1] ;%{PE}%R 8.3.31,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:P12, 3:C_DIS, 5:2, 7:CPDATP2
$BWDSTART = FALSE
LDAT_ACT=LCPDATP2
FDAT_ACT=FP12
BAS (#CP_PARAMS,2)
LIN  XP12 C_DIS
;ENDFOLD
;FOLD LIN P9 CONT Vel= 2 m/s CPDATP4 Tool[1] Base[0] ;%{PE}%R 8.3.31,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:P9, 3:C_DIS, 5:2, 7:CPDATP4
$BWDSTART = FALSE
LDAT_ACT=LCPDATP4
FDAT_ACT=FP9
BAS (#CP_PARAMS,2)
LIN  XP9 C_DIS
;ENDFOLD
END


DEF TakeLevelOne()

;FOLD ; Take the detail from the first level of storage;%{PE}%R 5.4.27,%MKUKATPBASIS,%CCOMMENT,%VNORMAL,%P 2: Take the detail from the first level of storage
;ENDFOLD
;FOLD LIN P13 CONT Vel= 2 m/s CPDATP2 Tool[1] Base[1] ;%{PE}%R 8.3.31,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:P13, 3:C_DIS, 5:2, 7:CPDATP2
$BWDSTART = FALSE
LDAT_ACT=LCPDATP2
FDAT_ACT=FP13
BAS (#CP_PARAMS,2)
LIN  XP13 C_DIS
;ENDFOLD
;FOLD LIN P14 CONT Vel= 2 m/s CPDATP3 Tool[1] Base[1] ;%{PE}%R 8.3.31,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:P14, 3:C_DIS, 5:2, 7:CPDATP3
$BWDSTART = FALSE
LDAT_ACT=LCPDATP3
FDAT_ACT=FP14
BAS (#CP_PARAMS,2)
LIN  XP14 C_DIS
;ENDFOLD
;FOLD OUT 1 ''  State= TRUE ;%{PE}%R 5.4.27,%MKUKATPBASIS,%COUT,%VOUTX,%P 2:1, 3:, 5:TRUE, 6:

$OUT[1]=TRUE
;ENDFOLD
;FOLD WAIT Time=0.5 sec;%{PE}%R 8.3.40,%MKUKATPBASIS,%CWAIT,%VWAIT,%P 3:0.5
WAIT SEC 0.5
;ENDFOLD
;FOLD LIN P15 CONT Vel= 2 m/s CPDATP2 Tool[1] Base[1] ;%{PE}%R 8.3.31,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:P15, 3:C_DIS, 5:2, 7:CPDATP2
$BWDSTART = FALSE
LDAT_ACT=LCPDATP2
FDAT_ACT=FP15
BAS (#CP_PARAMS,2)
LIN  XP15 C_DIS
;ENDFOLD
;FOLD LIN P16 CONT Vel= 2 m/s CPDATP4 Tool[1] Base[0] ;%{PE}%R 8.3.31,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:P16, 3:C_DIS, 5:2, 7:CPDATP4
$BWDSTART = FALSE
LDAT_ACT=LCPDATP4
FDAT_ACT=FP16
BAS (#CP_PARAMS,2)
LIN  XP16 C_DIS
;ENDFOLD
END


DEF PrepareLevelTwo()

;FOLD ; Prepare space for the next detail(which is going on level one);%{PE}%R 5.4.27,%MKUKATPBASIS,%CCOMMENT,%VNORMAL,%P 2: Prepare space for the next detail(which is going on level one)
;ENDFOLD
;FOLD ; by moving level two detail to free position near;%{PE}%R 5.4.27,%MKUKATPBASIS,%CCOMMENT,%VNORMAL,%P 2: by moving level two detail to free position near
;ENDFOLD
;FOLD LIN P18 CONT Vel= 2 m/s CPDATP2 Tool[1] Base[1] ;%{PE}%R 8.3.31,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:P18, 3:C_DIS, 5:2, 7:CPDATP2
$BWDSTART = FALSE
LDAT_ACT=LCPDATP2
FDAT_ACT=FP18
BAS (#CP_PARAMS,2)
LIN  XP18 C_DIS
;ENDFOLD
;FOLD LIN P19 CONT Vel= 2 m/s CPDATP3 Tool[1] Base[1] ;%{PE}%R 8.3.31,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:P19, 3:C_DIS, 5:2, 7:CPDATP3
$BWDSTART = FALSE
LDAT_ACT=LCPDATP3
FDAT_ACT=FP19
BAS (#CP_PARAMS,2)
LIN  XP19 C_DIS
;ENDFOLD
;FOLD OUT 1 ''  State= TRUE ;%{PE}%R 5.4.27,%MKUKATPBASIS,%COUT,%VOUTX,%P 2:1, 3:, 5:TRUE, 6:

$OUT[1]=TRUE
;ENDFOLD
;FOLD WAIT Time=0.5 sec;%{PE}%R 8.3.40,%MKUKATPBASIS,%CWAIT,%VWAIT,%P 3:0.5
WAIT SEC 0.5
;ENDFOLD
;FOLD LIN P20 CONT Vel= 2 m/s CPDATP2 Tool[1] Base[1] ;%{PE}%R 8.3.31,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:P20, 3:C_DIS, 5:2, 7:CPDATP2
$BWDSTART = FALSE
LDAT_ACT=LCPDATP2
FDAT_ACT=FP20
BAS (#CP_PARAMS,2)
LIN  XP20 C_DIS
;ENDFOLD
;FOLD LIN P21 CONT Vel= 2 m/s CPDATP8 Tool[1] Base[1] ;%{PE}%R 8.3.31,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:P21, 3:C_DIS, 5:2, 7:CPDATP8
$BWDSTART = FALSE
LDAT_ACT=LCPDATP8
FDAT_ACT=FP21
BAS (#CP_PARAMS,2)
LIN  XP21 C_DIS
;ENDFOLD
;FOLD LIN P22 CONT Vel= 2 m/s CPDATP3 Tool[1] Base[1] ;%{PE}%R 8.3.31,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:P22, 3:C_DIS, 5:2, 7:CPDATP3
$BWDSTART = FALSE
LDAT_ACT=LCPDATP3
FDAT_ACT=FP22
BAS (#CP_PARAMS,2)
LIN  XP22 C_DIS
;ENDFOLD
;FOLD OUT 1 ''  State= FALSE ;%{PE}%R 5.4.27,%MKUKATPBASIS,%COUT,%VOUTX,%P 2:1, 3:, 5:FALSE, 6:

$OUT[1]=FALSE
;ENDFOLD
;FOLD LIN P27 CONT Vel= 2 m/s CPDATP8 Tool[1] Base[1] ;%{PE}%R 8.3.31,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:P27, 3:C_DIS, 5:2, 7:CPDATP8
$BWDSTART = FALSE
LDAT_ACT=LCPDATP8
FDAT_ACT=FP27
BAS (#CP_PARAMS,2)
LIN  XP27 C_DIS
;ENDFOLD
END


DEF ClearLevelTwo()

;FOLD ; Return the detail moved in PrepareLevelTwo to its initial position;%{PE}%R 5.4.27,%MKUKATPBASIS,%CCOMMENT,%VNORMAL,%P 2: Return the detail moved in PrepareLevelTwo to its initial position
;ENDFOLD
;FOLD LIN P30 CONT Vel= 2 m/s CPDATP8 Tool[1] Base[1] ;%{PE}%R 8.3.31,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:P30, 3:C_DIS, 5:2, 7:CPDATP8
$BWDSTART = FALSE
LDAT_ACT=LCPDATP8
FDAT_ACT=FP30
BAS (#CP_PARAMS,2)
LIN  XP30 C_DIS
;ENDFOLD
;FOLD LIN P31 CONT Vel= 2 m/s CPDATP3 Tool[1] Base[1] ;%{PE}%R 8.3.31,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:P31, 3:C_DIS, 5:2, 7:CPDATP3
$BWDSTART = FALSE
LDAT_ACT=LCPDATP3
FDAT_ACT=FP31
BAS (#CP_PARAMS,2)
LIN  XP31 C_DIS
;ENDFOLD
;FOLD OUT 1 ''  State= TRUE ;%{PE}%R 5.4.27,%MKUKATPBASIS,%COUT,%VOUTX,%P 2:1, 3:, 5:TRUE, 6:

$OUT[1]=TRUE
;ENDFOLD
;FOLD WAIT Time=0.5 sec;%{PE}%R 8.3.40,%MKUKATPBASIS,%CWAIT,%VWAIT,%P 3:0.5
WAIT SEC 0.5
;ENDFOLD
;FOLD LIN P32 CONT Vel= 2 m/s CPDATP8 Tool[1] Base[1] ;%{PE}%R 8.3.31,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:P32, 3:C_DIS, 5:2, 7:CPDATP8
$BWDSTART = FALSE
LDAT_ACT=LCPDATP8
FDAT_ACT=FP32
BAS (#CP_PARAMS,2)
LIN  XP32 C_DIS
;ENDFOLD
;FOLD LIN P28 CONT Vel= 2 m/s CPDATP2 Tool[1] Base[1] ;%{PE}%R 8.3.31,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:P28, 3:C_DIS, 5:2, 7:CPDATP2
$BWDSTART = FALSE
LDAT_ACT=LCPDATP2
FDAT_ACT=FP28
BAS (#CP_PARAMS,2)
LIN  XP28 C_DIS
;ENDFOLD
;FOLD LIN P29 CONT Vel= 2 m/s CPDATP3 Tool[1] Base[1] ;%{PE}%R 8.3.31,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:P29, 3:C_DIS, 5:2, 7:CPDATP3
$BWDSTART = FALSE
LDAT_ACT=LCPDATP3
FDAT_ACT=FP29
BAS (#CP_PARAMS,2)
LIN  XP29 C_DIS
;ENDFOLD
;FOLD OUT 1 ''  State= FALSE ;%{PE}%R 5.4.27,%MKUKATPBASIS,%COUT,%VOUTX,%P 2:1, 3:, 5:FALSE, 6:

$OUT[1]=FALSE
;ENDFOLD
END


DEF TakeLevelTwo()

;FOLD ; Take the detail from the second level of storage;%{PE}%R 5.4.27,%MKUKATPBASIS,%CCOMMENT,%VNORMAL,%P 2: Take the detail from the second level of storage
;ENDFOLD
;FOLD LIN P17 CONT Vel= 2 m/s CPDATP2 Tool[1] Base[1] ;%{PE}%R 8.3.31,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:P17, 3:C_DIS, 5:2, 7:CPDATP2
$BWDSTART = FALSE
LDAT_ACT=LCPDATP2
FDAT_ACT=FP17
BAS (#CP_PARAMS,2)
LIN  XP17 C_DIS
;ENDFOLD
;FOLD LIN P33 CONT Vel= 2 m/s CPDATP3 Tool[1] Base[1] ;%{PE}%R 8.3.31,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:P33, 3:C_DIS, 5:2, 7:CPDATP3
$BWDSTART = FALSE
LDAT_ACT=LCPDATP3
FDAT_ACT=FP33
BAS (#CP_PARAMS,2)
LIN  XP33 C_DIS
;ENDFOLD
;FOLD OUT 1 ''  State= TRUE ;%{PE}%R 5.4.27,%MKUKATPBASIS,%COUT,%VOUTX,%P 2:1, 3:, 5:TRUE, 6:

$OUT[1]=TRUE
;ENDFOLD
;FOLD WAIT Time=0.5 sec;%{PE}%R 8.3.40,%MKUKATPBASIS,%CWAIT,%VWAIT,%P 3:0.5
WAIT SEC 0.5
;ENDFOLD
;FOLD LIN P34 CONT Vel= 2 m/s CPDATP2 Tool[1] Base[1] ;%{PE}%R 8.3.31,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:P34, 3:C_DIS, 5:2, 7:CPDATP2
$BWDSTART = FALSE
LDAT_ACT=LCPDATP2
FDAT_ACT=FP34
BAS (#CP_PARAMS,2)
LIN  XP34 C_DIS
;ENDFOLD
;FOLD LIN P35 CONT Vel= 2 m/s CPDATP4 Tool[1] Base[0] ;%{PE}%R 8.3.31,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:P35, 3:C_DIS, 5:2, 7:CPDATP4
$BWDSTART = FALSE
LDAT_ACT=LCPDATP4
FDAT_ACT=FP35
BAS (#CP_PARAMS,2)
LIN  XP35 C_DIS
;ENDFOLD
END
